const DATABASE_URL = "https://renessans-bank-3df94-default-rtdb.europe-west1.firebasedatabase.app";
const STAFF = {
  "–ò—Ä–∏–Ω–∞": "8992",
  "–ê—Ä—Å–µ–Ω–∏–π": "9274",
  "–û–ª—å–≥–∞": "9274",
  "dem": "1265",
  "renessans": "1265"
};

let currentUser = null;

// === ENTER —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—Ö–æ–¥–∞ ===
document.addEventListener('DOMContentLoaded', () => {
  const passField = document.getElementById("password");
  if (passField) {
    passField.addEventListener("keypress", (e) => {
      if (e.key === "Enter") login();
    });
  }
});

function login() {
  const l = document.getElementById("login").value.trim();
  const p = document.getElementById("password").value;
  if (STAFF[l] === p) {
    currentUser = l;
    document.getElementById("loginScreen").style.display = "none";
    document.getElementById("mainScreen").style.display = "block";
    document.getElementById("error").textContent = "";

    if (l === "renessans") {
      document.getElementById("btnNormal").style.display = "inline-block";
      document.getElementById("btnUrgent").style.display = "inline-block";
      document.getElementById("btnNormal").onclick = () => showSection('normal');
      document.getElementById("btnUrgent").onclick = () => showSection('urgent');
    }
  } else {
    document.getElementById("error").textContent = "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å";
  }
}

function logout() {
  currentUser = null;
  document.getElementById("mainScreen").style.display = "none";
  document.getElementById("loginScreen").style.display = "block";
  document.getElementById("login").value = "";
  document.getElementById("password").value = "";
}

function showSection(id) {
  const sections = ['cards', 'manage', 'request', 'archive', 'normal', 'urgent'];
  sections.forEach(s => {
    const el = document.getElementById(s + "Section");
    if (el) el.style.display = "none";
  });
  document.getElementById(id + "Section").style.display = "block";

  if (id === 'normal' && currentUser === 'renessans') loadAllRequests();
  if (id === 'urgent' && currentUser === 'renessans') loadUrgentRequests();
}

// === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –§–û–†–ú ===
document.addEventListener('DOMContentLoaded', () => {
  if (document.getElementById("cardsSection")) {
    document.getElementById("cardsSection").innerHTML = `
      <h3>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã</h3>
      <button onclick="selectCardType('–¥–µ–±–µ—Ç–æ–≤–∞—è')">–î–µ–±–µ—Ç–æ–≤–∞—è</button>
      <button onclick="selectCardType('–¥–µ—Ç—Å–∫–∞—è')">–î–µ—Ç—Å–∫–∞—è</button>
      <button onclick="selectCardType('–∫—Ä–µ–¥–∏—Ç–Ω–∞—è')">–ö—Ä–µ–¥–∏—Ç–Ω–∞—è</button>
      <div id="cardForm"></div>
    `;
  }
  if (document.getElementById("manageSection")) {
    document.getElementById("manageSection").innerHTML = `
      <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ–π</h3>
      <input type="text" id="manageFio" placeholder="–§–ò–û –∫–ª–∏–µ–Ω—Ç–∞" />
      <input type="password" id="manageCode" placeholder="–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ" />
      <button onclick="findClientForManage()">–ù–∞–π—Ç–∏</button>
      <div id="manageActions"></div>
    `;
  }
  if (document.getElementById("requestSection")) {
    document.getElementById("requestSection").innerHTML = `
      <h3>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ</h3>
      <input type="text" id="checkFio" placeholder="–§–ò–û –∫–ª–∏–µ–Ω—Ç–∞" />
      <input type="password" id="checkCode" placeholder="–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ" />
      <button onclick="checkExistingRequest()">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
      <div id="checkResult"></div>
    `;
  }
  if (document.getElementById("archiveSection")) {
    document.getElementById("archiveSection").innerHTML = `
      <h3>–ê—Ä—Ö–∏–≤ –æ–ø–µ—Ä–∞—Ü–∏–π</h3>
      <input type="text" id="archiveFio" placeholder="–§–ò–û –∫–ª–∏–µ–Ω—Ç–∞" />
      <input type="password" id="archiveCode" placeholder="–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ" />
      <input type="date" id="dateFrom" /> ‚Üí <input type="date" id="dateTo" />
      <button onclick="loadClientArchive()">–ü–æ–∫–∞–∑–∞—Ç—å –∞—Ä—Ö–∏–≤</button>
      <div id="archiveResult"></div>
    `;
  }
});

// === –û–§–û–†–ú–õ–ï–ù–ò–ï –ö–ê–†–¢–´ ===
function selectCardType(type) {
  let form = `<h3>–ê–Ω–∫–µ—Ç–∞: ${type} –∫–∞—Ä—Ç–∞</h3>`;
  form += `
    <input type="text" id="fio" placeholder="–§–ò–û" required>
    <input type="date" id="birthDate" required>
    <input type="text" id="passport" placeholder="–ü–∞—Å–ø–æ—Ä—Ç" required>
    <input type="tel" id="phone" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" required>
    <input type="email" id="email" placeholder="Email">
    <input type="text" id="address" placeholder="–ê–¥—Ä–µ—Å" required>
    <input type="text" id="codeWord" placeholder="–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ" required>
  `;

  if (type === "–∫—Ä–µ–¥–∏—Ç–Ω–∞—è") {
    form += `
      <input type="number" id="income" placeholder="–î–æ—Ö–æ–¥ (—Ä—É–±.)" required>
      <select id="loanPurpose" required>
        <option value="">–¶–µ–ª—å –∫—Ä–µ–¥–∏—Ç–∞</option>
        <option value="–ü–æ–∫—É–ø–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏">–ü–æ–∫—É–ø–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏</option>
        <option value="–†–µ–º–æ–Ω—Ç">–†–µ–º–æ–Ω—Ç</option>
        <option value="–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ">–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ</option>
        <option value="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
        <option value="–î—Ä—É–≥–æ–µ">–î—Ä—É–≥–æ–µ</option>
      </select>
    `;
  }

  form += `<button onclick="submitCard('${type}')">–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</button>`;
  document.getElementById("cardForm").innerHTML = form;
}

function submitCard(type) {
  const data = {
    type: type,
    fio: document.getElementById("fio").value,
    birthDate: document.getElementById("birthDate").value,
    passport: document.getElementById("passport").value,
    phone: document.getElementById("phone").value,
    email: document.getElementById("email").value,
    address: document.getElementById("address").value,
    codeWord: document.getElementById("codeWord").value,
    staff: currentUser,
    timestamp: new Date().toISOString()
  };

  if (type === "–∫—Ä–µ–¥–∏—Ç–Ω–∞—è") {
    const income = document.getElementById("income").value;
    if (income < 30000) {
      alert("‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ: –¥–æ—Ö–æ–¥ –Ω–∏–∂–µ 30 000 —Ä—É–±.");
      return;
    }
    data.income = income;
    data.loanPurpose = document.getElementById("loanPurpose").value;
  }

  alert("‚úÖ –ö–∞—Ä—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.");
  proceedToCardDetails(data);
}

function proceedToCardDetails(data) {
  const form = `
    <h3>–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞—Ä—Ç—ã</h3>
    <input type="text" id="cardNumber" placeholder="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã" required>
    <input type="text" id="expiry" placeholder="–ì–æ–¥–µ–Ω –¥–æ (–ú–ú/–ì–ì)" required>
    <input type="text" id="cvc" placeholder="CVC" required>
    <textarea id="notes" placeholder="–ü—Ä–∏–º–µ—á–∞–Ω–∏—è"></textarea>
    <button onclick="finalizeCard(${JSON.stringify(data).replace(/"/g, '&quot;')})">–ó–∞–≤–µ—Ä—à–∏—Ç—å</button>
  `;
  document.getElementById("cardForm").innerHTML = form;
}

function finalizeCard(data) {
  data.cardNumber = document.getElementById("cardNumber").value;
  data.expiry = document.getElementById("expiry").value;
  data.cvc = document.getElementById("cvc").value;
  data.notes = document.getElementById("notes").value;

  fetch(`${DATABASE_URL}/clients.json`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(data)
  }).then(() => {
    logOperation({ operation: `–í—ã–¥–∞—á–∞ ${data.type} –∫–∞—Ä—Ç—ã`, fio: data.fio, card: data.cardNumber });
    alert("‚úÖ –ö–∞—Ä—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!");
    document.getElementById("cardForm").innerHTML = "";
  });
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï ===
function findClientForManage() {
  const fio = document.getElementById("manageFio").value;
  const code = document.getElementById("manageCode").value;
  if (!fio || !code) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è");

  fetch(`${DATABASE_URL}/clients.json`)
    .then(res => res.json())
    .then(clients => {
      if (!clients) return alert("–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
      let found = null;
      for (let key in clients) {
        if (clients[key].fio === fio && clients[key].codeWord === code) {
          found = { id: key, ...clients[key] };
          break;
        }
      }
      if (!found) return alert("–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");

      document.getElementById("manageActions").innerHTML = `
        <p>–ö–∞—Ä—Ç–∞: ${found.cardNumber || "‚Äî"}</p>
        <p>–°—Ç–∞—Ç—É—Å: <strong>${found.status || "–∞–∫—Ç–∏–≤–Ω–∞"}</strong></p>
        <button onclick="updateStatus('${found.id}', '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞')">üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
        <button onclick="updateStatus('${found.id}', '–∞–∫—Ç–∏–≤–Ω–∞')">üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
        <button onclick="updateStatus('${found.id}', '–∑–∞–∫—Ä—ã—Ç–∞')">üóëÔ∏è –ó–∞–∫—Ä—ã—Ç—å</button>
      `;
    });
}

function updateStatus(clientId, status) {
  fetch(`${DATABASE_URL}/clients/${clientId}/status.json`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(status)
  }).then(() => {
    logOperation({ operation: `–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ ${status}`, fio: "–∏–∑ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è" });
    alert(`‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: ${status}`);
    findClientForManage();
  });
}

// === –û–ë–†–ê–©–ï–ù–ò–Ø ===
function checkExistingRequest() {
  const fio = document.getElementById("checkFio").value;
  const code = document.getElementById("checkCode").value;
  if (!fio || !code) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è");

  fetch(`${DATABASE_URL}/requests.json`)
    .then(res => res.json())
    .then(requests => {
      if (!requests) return document.getElementById("checkResult").innerHTML = "<p>–û–±—Ä–∞—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>";
      
      let found = null;
      for (let key in requests) {
        if (requests[key].fio === fio && requests[key].codeWord === code) {
          found = { id: key, ...requests[key] };
          break;
        }
      }

      if (!found) {
        document.getElementById("checkResult").innerHTML = "<p>–û–±—Ä–∞—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>";
      } else {
        let html = `
          <p><strong>–¢–µ–º–∞:</strong> ${found.topic}</p>
          <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${found.status}</p>
          <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> ${found.description}</p>
        `;
        if (found.response) {
          html += `<p><strong>–û—Ç–≤–µ—Ç:</strong> ${found.response}</p>`;
        } else {
          html += `<p>–û—Ç–≤–µ—Ç –µ—â—ë –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª</p>`;
        }
        if (currentUser !== "renessans") {
          html += `<button onclick="markAsUrgent('${found.id}')">–£—Å–∫–æ—Ä–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ</button>`;
        }
        document.getElementById("checkResult").innerHTML = html;
      }
    });
}

function markAsUrgent(reqId) {
  fetch(`${DATABASE_URL}/requests/${reqId}/urgent.json`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(true)
  }).then(() => {
    alert("‚úÖ –û–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ —Å—Ä–æ—á–Ω–æ–µ!");
    checkExistingRequest();
  });
}

// === –ê–†–•–ò–í ===
function loadClientArchive() {
  const fio = document.getElementById("archiveFio").value;
  const code = document.getElementById("archiveCode").value;
  if (!fio || !code) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –§–ò–û –∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ");

  fetch(`${DATABASE_URL}/operations.json`)
    .then(res => res.json())
    .then(ops => {
      if (!ops) return document.getElementById("archiveResult").innerHTML = "<p>–û–ø–µ—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>";
      
      const filtered = [];
      for (let key in ops) {
        const op = ops[key];
        if (op.fio === fio) {
          filtered.push(op);
        }
      }

      if (filtered.length === 0) {
        document.getElementById("archiveResult").innerHTML = "<p>–û–ø–µ—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>";
      } else {
        let html = "<h4>–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π:</h4><ul>";
        filtered.forEach(op => {
          html += `<li>${new Date(op.timestamp).toLocaleString()} ‚Äî ${op.operation} (${op.staff})</li>`;
        });
        html += "</ul>";
        document.getElementById("archiveResult").innerHTML = html;
      }
    });
}

// === RENESSANS: –í–°–ï –û–ë–†–ê–©–ï–ù–ò–Ø ===
function loadAllRequests() {
  fetch(`${DATABASE_URL}/requests.json`)
    .then(res => res.json())
    .then(reqs => {
      if (!reqs) return document.getElementById("normalSection").innerHTML = "<p>–ù–µ—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π</p>";
      
      let html = "";
      for (let key in reqs) {
        const r = reqs[key];
        html += `
          <div>
            <p><strong>${r.fio}</strong> ‚Äî ${r.topic}</p>
            <p>${r.description}</p>
            <p>–°—Ç–∞—Ç—É—Å: ${r.status}</p>
            ${r.response ? `<p><strong>–û—Ç–≤–µ—Ç:</strong> ${r.response}</p>` : ''}
            <textarea id="resp-${key}" placeholder="–í–∞—à –æ—Ç–≤–µ—Ç"></textarea>
            <button onclick="sendResponse('${key}')">–û—Ç–≤–µ—Ç–∏—Ç—å</button>
            <hr>
          </div>
        `;
      }
      document.getElementById("normalSection").innerHTML = html;
    });
}

function loadUrgentRequests() {
  fetch(`${DATABASE_URL}/requests.json`)
    .then(res => res.json())
    .then(reqs => {
      if (!reqs) return document.getElementById("urgentSection").innerHTML = "<p>–ù–µ—Ç —É—Å–∫–æ—Ä–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π</p>";
      
      let html = "";
      for (let key in reqs) {
        const r = reqs[key];
        if (r.urgent) {
          html += `
            <div>
              <p>üî• <strong>${r.fio}</strong> ‚Äî ${r.topic}</p>
              <p>${r.description}</p>
              <textarea id="respUrgent-${key}" placeholder="–í–∞—à –æ—Ç–≤–µ—Ç"></textarea>
              <button onclick="sendResponse('${key}')">–û—Ç–≤–µ—Ç–∏—Ç—å</button>
              <hr>
            </div>
          `;
        }
      }
      document.getElementById("urgentSection").innerHTML = html || "<p>–ù–µ—Ç —É—Å–∫–æ—Ä–µ–Ω–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π</p>";
    });
}

function sendResponse(reqId) {
  const resp = document.getElementById(`resp-${reqId}`) || document.getElementById(`respUrgent-${reqId}`);
  if (!resp || !resp.value.trim()) return alert("–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç");
  
  fetch(`${DATABASE_URL}/requests/${reqId}/response.json`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(resp.value.trim())
  }).then(() => {
    alert("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
    if (document.getElementById("normalSection").style.display !== "none") loadAllRequests();
    if (document.getElementById("urgentSection").style.display !== "none") loadUrgentRequests();
  });
}

// === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ===
function logOperation(opData) {
  fetch(`${DATABASE_URL}/operations.json`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      ...opData,
      timestamp: new Date().toISOString(),
      staff: currentUser
    })
  });
}
