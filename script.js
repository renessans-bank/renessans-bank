// === –¢–í–û–ô FIREBASE URL ===
const DATABASE_URL = "https://renessans-bank-3df94-default-rtdb.europe-west1.firebasedatabase.app";

// –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
const STAFF = {
  "–ò—Ä–∏–Ω–∞": "8992",
  "–ê—Ä—Å–µ–Ω–∏–π": "9274",
  "–û–ª—å–≥–∞": "9274",
  "dem": "1265",
  "renessans": "1265"
};

let currentUser = null;

// –í—Ö–æ–¥
function login() {
  const l = document.getElementById("login").value.trim();
  const p = document.getElementById("password").value;
  if (STAFF[l] === p) {
    currentUser = l;
    document.getElementById("loginScreen").style.display = "none";
    document.getElementById("mainScreen").style.display = "block";
    document.getElementById("error").textContent = "";
  } else {
    document.getElementById("error").textContent = "–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å";
  }
}

function logout() {
  currentUser = null;
  document.getElementById("mainScreen").style.display = "none";
  document.getElementById("loginScreen").style.display = "block";
}

function showSection(id) {
  document.getElementById("cardsSection").style.display = "none";
  document.getElementById("manageSection").style.display = "none";
  document.getElementById("requestSection").style.display = "none";
  document.getElementById(id + "Section").style.display = "block";
}

// === –û–§–û–†–ú–õ–ï–ù–ò–ï –ö–ê–†–¢–´ ===
function selectCardType(type) {
  let form = `<h3>–ê–Ω–∫–µ—Ç–∞: ${type} –∫–∞—Ä—Ç–∞</h3>`;
  form += `
    <input type="text" id="fio" placeholder="–§–ò–û" required>
    <input type="date" id="birthDate" required>
    <input type="text" id="passport" placeholder="–ü–∞—Å–ø–æ—Ä—Ç" required>
    <input type="tel" id="phone" placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" required>
    <input type="email" id="email" placeholder="Email">
    <input type="text" id="address" placeholder="–ê–¥—Ä–µ—Å" required>
    <input type="text" id="codeWord" placeholder="–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ" required>
  `;

  if (type === "–∫—Ä–µ–¥–∏—Ç–Ω–∞—è") {
    form += `
      <input type="number" id="income" placeholder="–î–æ—Ö–æ–¥ (—Ä—É–±.)" required>
      <select id="loanPurpose" required>
        <option value="">–¶–µ–ª—å –∫—Ä–µ–¥–∏—Ç–∞</option>
        <option value="–ü–æ–∫—É–ø–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏">–ü–æ–∫—É–ø–∫–∞ —Ç–µ—Ö–Ω–∏–∫–∏</option>
        <option value="–†–µ–º–æ–Ω—Ç">–†–µ–º–æ–Ω—Ç</option>
        <option value="–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ">–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ</option>
        <option value="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</option>
        <option value="–î—Ä—É–≥–æ–µ">–î—Ä—É–≥–æ–µ</option>
      </select>
    `;
  }

  form += `<button onclick="submitCard('${type}')">–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</button>`;
  document.getElementById("cardForm").innerHTML = form;
  document.getElementById("cardForm").style.display = "block";
}

function submitCard(type) {
  const data = {
    type: type,
    fio: document.getElementById("fio").value,
    birthDate: document.getElementById("birthDate").value,
    passport: document.getElementById("passport").value,
    phone: document.getElementById("phone").value,
    email: document.getElementById("email").value,
    address: document.getElementById("address").value,
    codeWord: document.getElementById("codeWord").value,
    staff: currentUser,
    timestamp: new Date().toISOString()
  };

  if (type === "–∫—Ä–µ–¥–∏—Ç–Ω–∞—è") {
    const income = document.getElementById("income").value;
    if (income < 30000) {
      alert("‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ: –¥–æ—Ö–æ–¥ –Ω–∏–∂–µ 30 000 —Ä—É–±.");
      return;
    }
    data.income = income;
    data.loanPurpose = document.getElementById("loanPurpose").value;
  }

  // –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–¥–∞—á–∏ –∫–∞—Ä—Ç—ã
  alert("‚úÖ –ö–∞—Ä—Ç–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! –í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.");
  proceedToCardDetails(data);
}

function proceedToCardDetails(data) {
  const form = `
    <h3>–†–µ–∫–≤–∏–∑–∏—Ç—ã –∫–∞—Ä—Ç—ã</h3>
    <input type="text" id="cardNumber" placeholder="–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã" required>
    <input type="text" id="expiry" placeholder="–ì–æ–¥–µ–Ω –¥–æ (–ú–ú/–ì–ì)" required>
    <input type="text" id="cvc" placeholder="CVC" required>
    <textarea id="notes" placeholder="–ü—Ä–∏–º–µ—á–∞–Ω–∏—è"></textarea>
    <button onclick="finalizeCard(${JSON.stringify(data).replace(/"/g, '&quot;')})">–ó–∞–≤–µ—Ä—à–∏—Ç—å</button>
  `;
  document.getElementById("cardForm").innerHTML = form;
}

function finalizeCard(data) {
  data.cardNumber = document.getElementById("cardNumber").value;
  data.expiry = document.getElementById("expiry").value;
  data.cvc = document.getElementById("cvc").value;
  data.notes = document.getElementById("notes").value;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Firebase
  fetch(`${DATABASE_URL}/clients.json`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(data)
  }).then(() => {
    alert("‚úÖ –ö–∞—Ä—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!");
    document.getElementById("cardForm").style.display = "none";
  });
}

// === –£–ü–†–ê–í–õ–ï–ù–ò–ï ===
function findClientForManage() {
  const fio = document.getElementById("manageFio").value;
  const code = document.getElementById("manageCode").value;
  if (!fio || !code) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è");

  fetch(`${DATABASE_URL}/clients.json`)
    .then(res => res.json())
    .then(clients => {
      if (!clients) return alert("–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
      let found = null;
      for (let key in clients) {
        if (clients[key].fio === fio && clients[key].codeWord === code) {
          found = { id: key, ...clients[key] };
          break;
        }
      }
      if (!found) return alert("–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");

      document.getElementById("manageActions").innerHTML = `
        <p>–ö–∞—Ä—Ç–∞: ${found.cardNumber || "‚Äî"}</p>
        <p>–°—Ç–∞—Ç—É—Å: <strong>${found.status || "–∞–∫—Ç–∏–≤–Ω–∞"}</strong></p>
        <button onclick="updateStatus('${found.id}', '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞')">üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
        <button onclick="updateStatus('${found.id}', '–∞–∫—Ç–∏–≤–Ω–∞')">üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å</button>
        <button onclick="updateStatus('${found.id}', '–∑–∞–∫—Ä—ã—Ç–∞')">üóëÔ∏è –ó–∞–∫—Ä—ã—Ç—å</button>
      `;
      document.getElementById("manageActions").style.display = "block";
    });
}

function updateStatus(clientId, status) {
  fetch(`${DATABASE_URL}/clients/${clientId}/status.json`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(status)
  }).then(() => {
    alert(`‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: ${status}`);
    findClientForManage();
  });
}

// === –û–ë–†–ê–©–ï–ù–ò–Ø ===
function checkClientForRequest() {
  const fio = document.getElementById("reqFio").value;
  const code = document.getElementById("reqCode").value;
  if (!fio || !code) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è");

  fetch(`${DATABASE_URL}/clients.json`)
    .then(res => res.json())
    .then(clients => {
      if (!clients) return alert("–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");
      let exists = false;
      for (let key in clients) {
        if (clients[key].fio === fio && clients[key].codeWord === code) {
          exists = true;
          break;
        }
      }
      if (!exists) return alert("–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω");

      document.getElementById("requestForm").innerHTML = `
        <select id="topic" required>
          <option value="">–¢–µ–º–∞</option>
          <option value="–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞">–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–∞—Ä—Ç—ã</option>
          <option value="–í–æ–ø—Ä–æ—Å">–í–æ–ø—Ä–æ—Å –ø–æ —Å—á—ë—Ç—É</option>
          <option value="–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞">–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</option>
        </select>
        <textarea id="desc" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ" required></textarea>
        <button onclick="submitRequest('${fio}', '${code}')">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      `;
      document.getElementById("requestForm").style.display = "block";
    });
}

function submitRequest(fio, code) {
  const topic = document.getElementById("topic").value;
  const desc = document.getElementById("desc").value;
  if (!topic || !desc) return alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è");

  const req = {
    fio,
    codeWord: code,
    topic,
    description: desc,
    status: "–Ω–æ–≤–æ–µ",
    handledBy: currentUser,
    timestamp: new Date().toISOString()
  };

  fetch(`${DATABASE_URL}/requests.json`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(req)
  }).then(() => {
    alert("‚úÖ –û–±—Ä–∞—â–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ!");
    document.getElementById("requestForm").style.display = "none";
  });
}
